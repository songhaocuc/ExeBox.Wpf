<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:ExeBox.Wpf.Resources"
    xmlns:cmd="clr-namespace:ExeBox.Wpf.Command">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="Colors.xaml" />
        <ResourceDictionary
            Source="Images.xaml" />
        <ResourceDictionary>
            <!--图标格式-->
            <Style
                x:Key="log_item_image_style"
                TargetType="Image">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Type}"
                        Value="Error">
                        <Setter
                            Property="Source"
                            Value="{StaticResource log_item_error_image}" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Type}"
                        Value="Message">
                        <Setter
                            Property="Source"
                            Value="{StaticResource log_item_message_image}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--context menu 样式-->
            <Style
                x:Key="context_menu_style"
                TargetType="{x:Type ContextMenu}">
                <Setter
                    Property="BorderBrush"
                    Value="LightGray" />
            </Style>
            <Style
                x:Key="menu_item_style"
                TargetType="MenuItem">
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="MenuItem">
                            <Grid
                                ToolTip="{TemplateBinding ToolTip}"
                                Height="24"
                                Background="#F5F5F5"
                                Width="{TemplateBinding Width}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="30" />
                                    <ColumnDefinition
                                        Width="*"
                                        MinWidth="80" />
                                    <ColumnDefinition
                                        Width="40" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    Background="#F5F5F5" />
                                <Border
                                    x:Name="_border"
                                    Grid.ColumnSpan="3"/>
                                <Image
                                    x:Name="_imgicon"
                                    Width="12"
                                    Height="12"
                                    Stretch="Uniform"
                                    Source="{Binding Icon,RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock
                                    Foreground="#2D2D30"
                                    Grid.Column="1"
                                    Margin="5 0 15 0"
                                    VerticalAlignment="Center"
                                    x:Name="_txt"
                                    Text="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock
                                    x:Name="_gesture"
                                    Grid.Column="2"
                                    Margin="{TemplateBinding Padding}"
                                    Opacity="0.7"
                                    Text="{TemplateBinding InputGestureText}"
                                    VerticalAlignment="Center" />
                                <Path
                                    Visibility="Collapsed"
                                    x:Name="_path"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    Margin="5 13 5 0"
                                    Data="M0,4 4,0 0,-4 z"
                                    Fill="#7E8A92" />
                                <Popup
                                    Placement="Right"
                                    x:Name="SubMenuPopup"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{TemplateBinding IsSubmenuOpen}">
                                    <ScrollViewer
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                        <Border
                                            Background="#ffc787"
                                            Name="SubmenuBorder"
                                            BorderBrush="LightGray"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                            <StackPanel
                                                IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Border>
                                    </ScrollViewer>
                                </Popup>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger
                                    Property="HasItems"
                                    Value="true">
                                    <Setter
                                        TargetName="_path"
                                        Property="Visibility"
                                        Value="Visible" />
                                </Trigger>
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="true">
                                    <Setter
                                        TargetName="_border"
                                        Property="Background"
                                        Value="#c9def5" />
                                    <Setter
                                        TargetName="_path"
                                        Property="Fill"
                                        Value="White" />
                                    <Setter
                                        TargetName="_gesture"
                                        Property="Background"
                                        Value="#c9def5" />
                                </Trigger>
                                <Trigger
                                    Property="IsEnabled"
                                    Value="false">
                                    <Setter
                                        TargetName="_txt"
                                        Property="Foreground"
                                        Value="Gray" />
                                    <Setter
                                        TargetName="_gesture"
                                        Property="Foreground"
                                        Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
                x:Key="menu_item_style_head"
                TargetType="MenuItem">
                <Setter
                    Property="BorderThickness"
                    Value="0" />
            </Style>
            <!--listBoxItem样式-->
            <Style
                x:Key="log_item_container_style"
                TargetType="ListBoxItem">
                <Setter
                    Property="BorderThickness"
                    Value="0" />
                <Setter
                    Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu
                            Style="{StaticResource context_menu_style}"
                            ItemContainerStyle="{StaticResource menu_item_style}"
                            StaysOpen="True">
                            <MenuItem
                                Header="全选"
                                Icon="{StaticResource menu_item_image_selectall }"
                                Command="{x:Static cmd:ExeboxCommands.SelectAll}" />
                            <MenuItem
                                Header="复制"
                                Icon="{StaticResource menu_item_image_copy }"
                                Command="{x:Static cmd:ExeboxCommands.CopyLogs}">
                                <MenuItem.ToolTip>
                                    <StackPanel>
                                        <TextBlock FontWeight="Heavy">复制所选日志</TextBlock>
                                        <TextBlock>可以使用Ctrl或Shift进行多选</TextBlock>
                                    </StackPanel>
                                </MenuItem.ToolTip>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type ListBoxItem}">
                            <Border
                                x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="Selector.IsSelectionActive"
                                            Value="True" />
                                        <Condition
                                            Property="IsSelected"
                                            Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        Property="Background"
                                        TargetName="Bd"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                    <Setter
                                        Property="TextElement.Foreground"
                                        TargetName="Bd"
                                        Value="{StaticResource visual_studio_foreground_brush_selected}" />
                                </MultiTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>

                                        <Condition
                                            Binding="{Binding RelativeSource={x:Static RelativeSource.Self},Path=IsSelected}"
                                            Value="False" />
                                        <Condition
                                            Binding="{Binding Type}"
                                            Value="Error" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter
                                        Property="Foreground"
                                        Value="OrangeRed" />
                                </MultiDataTrigger>
                                <Trigger
                                    Property="IsEnabled"
                                    Value="False">
                                    <Setter
                                        Property="TextElement.Foreground"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="IsSelected"
                                            Value="true" />
                                        <Condition
                                            Property="Selector.IsSelectionActive"
                                            Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <!--listBox样式-->
            <Style
                x:Key="log_list_style"
                TargetType="ListBox">
                <Setter
                    Property="Background"
                    Value="{StaticResource visual_studio_background_brush}" />
                <Setter
                    Property="BorderThickness"
                    Value="0" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource visual_studio_foreground_brush}" />
            </Style>
            <!--toggle button样式-->
            <Style
                x:Key="toggle_button_style"
                TargetType="{x:Type ToggleButton}">

                <Setter
                    Property="Margin"
                    Value="2" />
                <Setter
                    Property="Padding"
                    Value="2,2" />
                <Setter
                    Property="Background"
                    Value="{StaticResource visual_studio_background_brush}" />
                <Setter
                    Property="BorderBrush"
                    Value="Transparent" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource visual_studio_foreground_brush}" />
                <Setter
                    Property="BorderThickness"
                    Value="1" />
                <Setter
                    Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter
                    Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type ToggleButton}">
                            <Border
                                x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Focusable="False"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger
                                    Property="Button.IsDefaulted"
                                    Value="true">
                                    <Setter
                                        Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                </Trigger>
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="true">
                                    <Setter
                                        Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_mouseover}" />

                                </Trigger>
                                <Trigger
                                    Property="IsPressed"
                                    Value="true">
                                    <Setter
                                        Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                </Trigger>
                                <Trigger
                                    Property="IsChecked"
                                    Value="true">
                                    <Setter
                                        Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--click button 样式-->
            <Style
                x:Key="click_button_style"
                TargetType="{x:Type Button}">

                <Setter
                    Property="Margin"
                    Value="2" />
                <Setter
                    Property="Padding"
                    Value="2,2" />
                <Setter
                    Property="Background"
                    Value="{StaticResource visual_studio_background_brush}" />
                <Setter
                    Property="BorderBrush"
                    Value="Transparent" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource visual_studio_foreground_brush}" />
                <Setter
                    Property="BorderThickness"
                    Value="1" />
                <Setter
                    Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter
                    Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type Button}">
                            <Border
                                x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Focusable="False"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger
                                    Property="Button.IsDefaulted"
                                    Value="true">
                                    <Setter
                                        Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                </Trigger>
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="true">
                                    <Setter
                                        Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_mouseover}" />

                                </Trigger>
                                <Trigger
                                    Property="IsPressed"
                                    Value="true">
                                    <Setter
                                        Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                    
                                </Trigger>
                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--text box 样式-->
            <VisualBrush
                x:Key="helper_visual_brush"
                TileMode="None"
                Opacity="0.3"
                Stretch="None"
                AlignmentX="Left">
                <VisualBrush.Visual>
                    <TextBlock
                        Text="Search" />
                </VisualBrush.Visual>
            </VisualBrush>
            <Style
                x:Key="textbox_style"
                TargetType="{x:Type TextBox}">
                <Setter
                    Property="Background"
                    Value="White" />
                <Setter
                    Property="BorderBrush"
                    Value="LightGray" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource visual_studio_foreground_brush}" />
                <Setter
                    Property="BorderThickness"
                    Value="1" />

                <Setter
                    Property="VerticalContentAlignment"
                    Value="Center" />

                <Setter
                    Property="AllowDrop"
                    Value="true" />
                <Setter
                    Property="ScrollViewer.PanningMode"
                    Value="VerticalFirst" />
                <Setter
                    Property="Stylus.IsFlicksEnabled"
                    Value="False" />
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type TextBox}">
                            <Border
                                x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger
                                    Property="IsFocused"
                                    Value="False">
                                    <Setter
                                        Property="Foreground"
                                        Value="LightGray" />
                                </Trigger>
                                <Trigger
                                    Property="IsEnabled"
                                    Value="false">
                                    <Setter
                                        Property="Opacity"
                                        TargetName="border"
                                        Value="0.56" />
                                </Trigger>
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="true">
                                    <Setter
                                        Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                </Trigger>
                                <Trigger
                                    Property="IsKeyboardFocused"
                                    Value="true">
                                    <Setter
                                        Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource visual_studio_background_brush_selected}" />
                                </Trigger>
                                <Trigger
                                    Property="Text"
                                    Value="{x:Null}">
                                    <Setter
                                        Property="Background"
                                        Value="{StaticResource  helper_visual_brush}" />
                                </Trigger>
                                <Trigger
                                    Property="Text"
                                    Value="">
                                    <Setter
                                        Property="Background"
                                        Value="{StaticResource helper_visual_brush}" />
                                </Trigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <!--tree view item 样式 及行为-->
            <Style
                x:Key="ExpandCollapseToggleStyle"
                TargetType="ToggleButton">
                <Setter
                    Property="Focusable"
                    Value="False" />
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="ToggleButton">
                            <Border
                                Width="12"
                                Height="14">
                                <Path
                                    x:Name="ExpandPath"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Fill="Transparent"
                                    Stroke="#FFE6E6E6"
                                    Data="M 2 2 L 7 7 L 2 12 Z" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="IsMouseOver"
                                            Value="True" />
                                        <Condition
                                            Property="IsChecked"
                                            Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        Property="Stroke"
                                        TargetName="ExpandPath"
                                        Value="#FF1BBBFA" />
                                </MultiTrigger>
                                <Trigger
                                    Property="IsChecked"
                                    Value="True">
                                    <Setter
                                        Property="Data"
                                        TargetName="ExpandPath"
                                        Value="M 1 10 L 7 3 L 7 10 Z" />
                                    <Setter
                                        Property="Fill"
                                        TargetName="ExpandPath"
                                        Value="#FFE6E6E6" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="IsMouseOver"
                                            Value="True" />
                                        <Condition
                                            Property="IsChecked"
                                            Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        Property="Stroke"
                                        TargetName="ExpandPath"
                                        Value="#FF1BBBFA" />
                                    <Setter
                                        Property="Fill"
                                        TargetName="ExpandPath"
                                        Value="#FF1BBBFA" />
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
                x:Key="TreeViewItemFocusVisual">
                <Setter
                    Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle
                                    Margin="0,0,0,0"
                                    StrokeThickness="5"
                                    Stroke="Black"
                                    StrokeDashArray="1 2"
                                    Opacity="0"
                                    Fill="Black" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
                x:Key="tree_view_item_style_level_0"
                TargetType="{x:Type TreeViewItem}">
                <!--右键菜单-->
                <Setter
                    Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu
                            Style="{StaticResource context_menu_style}"
                            ItemContainerStyle="{StaticResource menu_item_style}"
                            StaysOpen="True">
                            <MenuItem
                                Header="修改任务选择"
                                Icon="{StaticResource menu_item_image_modify }"
                                Command="{x:Static cmd:ExeboxCommands.ModifySelections}" />
                            <MenuItem
                                Header="停止所有任务"
                                Icon="{StaticResource menu_item_image_stop }"
                                Command="{x:Static cmd:ExeboxCommands.StopAllTasks}" />
                            <MenuItem
                                Header="重启所有任务"
                                Icon="{StaticResource menu_item_image_restart }"
                                Command="{x:Static cmd:ExeboxCommands.RestartAllTasks}" />
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="Background"
                    Value="Transparent" />
                <Setter
                    Property="HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter
                    Property="VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter
                    Property="Padding"
                    Value="1,0,0,0" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter
                    Property="FocusVisualStyle"
                    Value="{StaticResource TreeViewItemFocusVisual}" />
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition
                                        Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border
                                    Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                    <!--根据层级修改此处-->
                                    <Grid
                                        Margin="0,2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                Width="auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton
                                            x:Name="Expander"
                                            Style="{StaticResource ExpandCollapseToggleStyle}"
                                            ClickMode="Press"
                                            HorizontalAlignment="Left"
                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <ContentPresenter
                                            Grid.Column="1"
                                            Margin="8,0,0,0"
                                            x:Name="PART_Header"
                                            ContentSource="Header"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                    </Grid>
                                </Border>
                                <ItemsPresenter
                                    x:Name="ItemsHost"
                                    Grid.Row="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger
                                    Property="IsExpanded"
                                    Value="false">
                                    <Setter
                                        TargetName="ItemsHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                </Trigger>
                                <Trigger
                                    Property="HasItems"
                                    Value="false">
                                    <Setter
                                        TargetName="Expander"
                                        Property="Visibility"
                                        Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="HasHeader"
                                            Value="false" />
                                        <Condition
                                            Property="Width"
                                            Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="PART_Header"
                                        Property="MinWidth"
                                        Value="75" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="HasHeader"
                                            Value="false" />
                                        <Condition
                                            Property="Height"
                                            Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="PART_Header"
                                        Property="MinHeight"
                                        Value="19" />
                                </MultiTrigger>
                                <Trigger
                                    Property="IsSelected"
                                    Value="true">
                                    <Setter
                                        TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="IsSelected"
                                            Value="true" />
                                        <Condition
                                            Property="IsSelectionActive"
                                            Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="Bd"
                                        Property="Background"
                                        Value="Gray" />
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger
                                    Property="IsEnabled"
                                    Value="false">
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
                x:Key="tree_view_item_style_level_1"
                TargetType="{x:Type TreeViewItem}">
                <!--右键菜单-->
                <Setter
                    Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu
                            Style="{StaticResource context_menu_style}"
                            ItemContainerStyle="{StaticResource menu_item_style}"
                            StaysOpen="True">
                            <MenuItem
                                Header="打开日志页"
                                Icon="{StaticResource menu_item_image_open }"
                                Command="{x:Static cmd:ExeboxCommands.OpenPage}" />
                            <MenuItem
                                Header="关闭日志页"
                                Icon="{StaticResource menu_item_image_close }"
                                Command="{x:Static cmd:ExeboxCommands.ClosePage}" />
                            <MenuItem
                                Header="停止任务"
                                Icon="{StaticResource menu_item_image_stop }"
                                Command="{x:Static cmd:ExeboxCommands.StopTask}" />
                            <MenuItem
                                Header="重启任务"
                                Icon="{StaticResource menu_item_image_restart }"
                                Command="{x:Static cmd:ExeboxCommands.RestartTask}" />
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="Background"
                    Value="Transparent" />
                <Setter
                    Property="HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter
                    Property="VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter
                    Property="Padding"
                    Value="1,0,0,0" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter
                    Property="FocusVisualStyle"
                    Value="{StaticResource TreeViewItemFocusVisual}" />
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition
                                        Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border
                                    Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                    <!--修改此处-->
                                    <Grid
                                        Margin="18,2,0,2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                Width="auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton
                                            x:Name="Expander"
                                            Style="{StaticResource ExpandCollapseToggleStyle}"
                                            ClickMode="Press"
                                            HorizontalAlignment="Left"
                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <ContentPresenter
                                            Grid.Column="1"
                                            Margin="8,0,0,0"
                                            x:Name="PART_Header"
                                            ContentSource="Header"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                    </Grid>
                                </Border>
                                <ItemsPresenter
                                    x:Name="ItemsHost"
                                    Grid.Row="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger
                                    Property="IsExpanded"
                                    Value="false">
                                    <Setter
                                        TargetName="ItemsHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                </Trigger>
                                <Trigger
                                    Property="HasItems"
                                    Value="false">
                                    <Setter
                                        TargetName="Expander"
                                        Property="Visibility"
                                        Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="HasHeader"
                                            Value="false" />
                                        <Condition
                                            Property="Width"
                                            Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="PART_Header"
                                        Property="MinWidth"
                                        Value="75" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="HasHeader"
                                            Value="false" />
                                        <Condition
                                            Property="Height"
                                            Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="PART_Header"
                                        Property="MinHeight"
                                        Value="19" />
                                </MultiTrigger>
                                <Trigger
                                    Property="IsSelected"
                                    Value="true">
                                    <Setter
                                        TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="IsSelected"
                                            Value="true" />
                                        <Condition
                                            Property="IsSelectionActive"
                                            Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger
                                    Property="IsEnabled"
                                    Value="false">
                                    <Setter
                                        Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--tree item 图标样式-->
            <Style
                x:Key="tree_view_item_image_style_config"
                TargetType="Image">
                <Setter
                    Property="Source"
                    Value="{StaticResource tree_item_config_image}" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}"
                        Value="True">
                        <Setter
                            Property="Source"
                            Value="{StaticResource tree_item_config_image_light}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="tree_view_item_image_style_task"
                TargetType="Image">
                <Setter
                    Property="Source"
                    Value="{StaticResource tree_item_task_image}" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}"
                        Value="True">
                        <Setter
                            Property="Source"
                            Value="{StaticResource tree_item_task_image_light}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!--任务状态图标样式-->
            <Style
                x:Key="log_task_status_image_style"
                TargetType="{x:Type Image}">
                <Setter
                    Property="Source"
                    Value="{StaticResource task_status_image_terminated}" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding Status}"
                        Value="None">
                        <Setter
                            Property="Source"
                            Value="{StaticResource task_status_image_none}" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Status}"
                        Value="Initialized">
                        <Setter
                            Property="Source"
                            Value="{StaticResource task_status_image_initialize}" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Status}"
                        Value="Running">
                        <Setter
                            Property="Source"
                            Value="{StaticResource task_status_image_running}" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding Status}"
                        Value="Terminated">
                        <Setter
                            Property="Source"
                            Value="{StaticResource task_status_image_terminated}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>